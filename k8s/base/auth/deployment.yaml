apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: mercadoverde
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: elviflo/mercadoverde-auth:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          env:
            - name: NODE_ENV
              valueFrom: { configMapKeyRef: { name: common-env, key: NODE_ENV } }
            - name: PORT
              value: "3001"
            - name: DATABASE_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-auth-svc:5432/$(POSTGRES_DB)?schema=public"
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: postgres-auth-secret, key: POSTGRES_USER } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: postgres-auth-secret, key: POSTGRES_PASSWORD } }
            - name: POSTGRES_DB
              valueFrom: { secretKeyRef: { name: postgres-auth-secret, key: POSTGRES_DB } }
            - name: JWT_ACCESS_SECRET
              valueFrom: { secretKeyRef: { name: common-secrets, key: JWT_ACCESS_SECRET } }
            - name: JWT_REFRESH_SECRET
              valueFrom: { secretKeyRef: { name: common-secrets, key: JWT_REFRESH_SECRET } }
          readinessProbe:
            httpGet: { path: "/health", port: 3001 }
            initialDelaySeconds: 8
          livenessProbe:
            httpGet: { path: "/health", port: 3001 }
            initialDelaySeconds: 20
