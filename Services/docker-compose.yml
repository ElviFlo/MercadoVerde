services:
  # ========================
  # Microservicios
  # ========================
  auth:
    build: ./auth
    container_name: auth_service
    env_file:
      - ./auth/.env
    ports:
      - "3001:3000"
    depends_on:
      postgres-auth:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  products:
    build: ./products
    container_name: products_service
    env_file:
      - ./products/.env
    ports:
      - "3003:3000"
    depends_on:
      postgres-products:
        condition: service_healthy
      auth:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  orders:
    build: ./orders
    container_name: orders_service
    env_file:
      - ./orders/.env
    ports:
      - "3002:3000"
    depends_on:
      postgres-orders:
        condition: service_healthy
      products:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  cart:
    build: ./cart
    container_name: cart_service
    env_file:
      - ./cart/.env
    ports:
      - "3005:3000"
    depends_on:
      postgres-cart:
        condition: service_healthy
      auth:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  categories:
    build: ./categories
    container_name: categories_service
    env_file:
      - ./categories/.env
    ports:
      - "3004:3000"
    depends_on:
      postgres-categories:
        condition: service_healthy
      auth:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  voice:
    build: ./voice
    container_name: voice_service
    env_file:
      - ./voice/.env
    ports:
      - "3006:3000"
    depends_on:
      postgres-voice:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  # ========================
  # Bases de datos Postgres
  # ========================
  postgres-auth:
    image: postgres:16-alpine
    container_name: mv_postgres_auth
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
      POSTGRES_DB: auth_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db"]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres-products:
    image: postgres:16-alpine
    container_name: mv_postgres_products
    environment:
      POSTGRES_USER: products_user
      POSTGRES_PASSWORD: products_pass
      POSTGRES_DB: products_db
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U products_user -d products_db"]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres-orders:
    image: postgres:16-alpine
    container_name: mv_postgres_orders
    environment:
      POSTGRES_USER: orders_user
      POSTGRES_PASSWORD: orders_pass
      POSTGRES_DB: orders_db
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orders_user -d orders_db"]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres-cart:
    image: postgres:16-alpine
    container_name: mv_postgres_cart
    environment:
      POSTGRES_USER: cart_user
      POSTGRES_PASSWORD: cart_pass
      POSTGRES_DB: cart_db
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cart_user -d cart_db"]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres-categories:
    image: postgres:16-alpine
    container_name: mv_postgres_categories
    environment:
      POSTGRES_USER: categories_user
      POSTGRES_PASSWORD: categories_pass
      POSTGRES_DB: categories_db
    ports:
      - "5437:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U categories_user -d categories_db"]
      interval: 5s
      timeout: 3s
      retries: 10

  postgres-voice:
    image: postgres:16-alpine
    container_name: mv_postgres_voice
    environment:
      POSTGRES_USER: voice_user
      POSTGRES_PASSWORD: voice_pass
      POSTGRES_DB: voice_db
    ports:
      - "5438:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voice_user -d voice_db"]
      interval: 5s
      timeout: 3s
      retries: 10
