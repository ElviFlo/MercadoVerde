// Services/orders/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CLIENT
}

model User {
  id        String   @id @default(uuid())      // ← UUID (string)
  email     String   @unique
  password  String
  name      String
  role      Role     @default(CLIENT)
  carts     Cart[]
  orders    Order[]
  createdAt DateTime @default(now())
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id                Int                 @id @default(autoincrement())
  name              String
  description       String?
  price             Float
  stock             Int
  categoryId        Int
  category          Category            @relation(fields: [categoryId], references: [id])
  cartItems         CartItem[]
  orderItems        OrderItem[]
  createdAt         DateTime            @default(now())
  InventoryMovement InventoryMovement[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    String                                  // ← referencia a User.id (String)
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  active    Boolean    @default(true)
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int
  price     Float
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id        String      @id @default(uuid())       // ← UUID (string)
  userId    String                                  // ← referencia a User.id (String)
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  status    String      @default("PENDING")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   String                                  // ← referencia a Order.id (String)
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model InventoryMovement {
  id        Int      @id @default(autoincrement())
  productId Int
  change    Int
  reason    String
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}

model VoiceIntentsLog {
  id         Int      @id @default(autoincrement())
  transcript String
  language   String
  confidence Float
  activation String
  intent     String
  result     String
  createdAt  DateTime @default(now())
}

model VoiceRecord {
  id        Int      @id @default(autoincrement())
  audioData String
  createdAt DateTime @default(now())
}
